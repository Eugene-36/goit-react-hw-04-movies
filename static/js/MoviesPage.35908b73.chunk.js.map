{"version":3,"sources":["img/withoutImg.jpg","components/MoviePreview/MoviePreview.js","components/MovieList/MovieList.js","components/Button/Button.js","pages/MoviesPage/MoviesPage.js"],"names":["MoviePreview","backdrop_path","title","poster","image","className","s","MoviePreview_item","tumb","picture","src","alt","width","height","MovieList","movie","map","id","to","pathname","Button","onClick","type","MoviesPage","state","movies","query","page","total","error","onSubmitSearch","path","axios","get","then","response","setState","data","results","catch","Error","finally","length","this","props","location","search","slice","onSubmit","submitQuery","name","handleBtn","Component"],"mappings":"yGAAe,QAA0B,wC,sGCuB1BA,EAlBM,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,cAAeC,EAAY,EAAZA,MAEjCC,EAASF,EAAa,UADR,uCACQ,OAAkBA,GAAkBG,IAC9D,OACE,sBAAKC,UAAWC,IAAEC,kBAAlB,UACE,qBAAKF,UAAWC,IAAEE,KAAlB,SACE,qBACEH,UAAWC,IAAEG,QACbC,IAAKP,EACLQ,IAAKT,EACLU,MAAM,MACNC,OAAO,WAGX,mCAAMX,SCEGY,IAjBG,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACnB,OACE,6BACGA,EAAMC,KAAI,gBAAGf,EAAH,EAAGA,cAAegB,EAAlB,EAAkBA,GAAIf,EAAtB,EAAsBA,MAAtB,OACT,6BACE,cAAC,IAAD,CACEgB,GAAI,CACFC,SAAS,WAAD,OAAaF,IAFzB,SAKE,cAAC,EAAD,CAAcf,MAAOA,EAAOD,cAAeA,OANtCgB,U,yFCEFG,EAPA,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAChB,OACE,wBAAQC,KAAK,SAASD,QAAS,kBAAMA,KAArC,wB,yBCEEE,E,4MACJC,MAAQ,CACNC,OAAQ,GACRC,MAAO,GACPC,KAAM,EACNC,MAAO,KACPC,MAAO,I,EAOTC,eAAiB,SAACJ,GAChB,IAEMK,EAAI,UAFM,gCAEN,gCADK,mCACL,iCAAoEL,EAApE,+BACV,OAAOM,IACJC,IAAIF,GACJG,MAAK,SAACC,GACL,EAAKC,SAAS,CAAEX,OAAQU,EAASE,KAAKC,aAEvCC,OAAM,SAACV,GACN,MAAM,IAAIW,MAAMX,MAEjBY,SAAQ,WACH,EAAKjB,MAAMC,OAAOiB,QAAU,EAC9B,EAAKN,SAAS,CAAEP,OAAO,IAEvB,EAAKO,SAAS,CAAEP,OAAO,Q,uDArB/B,WACMc,KAAKC,MAAMC,SAASC,QACtBH,KAAKb,eAAea,KAAKC,MAAMC,SAASC,OAAOC,MAAM,M,oBAuBzD,WAAU,IAAD,EACyBJ,KAAKnB,MAA7BC,EADD,EACCA,OAAQG,EADT,EACSA,MAAOD,EADhB,EACgBA,KAEvB,OACE,qCACE,uBAAMqB,SAAUL,KAAKM,YAArB,UACE,gCACE,uBAAO3B,KAAK,OAAO4B,KAAK,YAE1B,wBAAQ5B,KAAK,SAAb,uBAEDG,EAAOiB,OAAS,EACf,qCACE,cAAC5B,EAAA,EAAD,CAAWC,MAAOU,IACjBE,GAAQC,GAAS,cAAC,EAAD,CAAQP,QAASsB,KAAKQ,eAG1C,wH,GAlDeC,aAwDV7B","file":"static/js/MoviesPage.35908b73.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/withoutImg.b2592c11.jpg\";","import React from \"react\";\r\n//import PropTypes from \"prop-types\";\r\nimport image from \"../../img/withoutImg.jpg\";\r\nimport s from \"./MoviePreview.module.css\";\r\n\r\nconst MoviePreview = ({ backdrop_path, title }) => {\r\n  const posterUrl = \"https://image.tmdb.org/t/p/original\";\r\n  let poster = backdrop_path ? `${posterUrl}${backdrop_path}` : image;\r\n  return (\r\n    <div className={s.MoviePreview_item}>\r\n      <div className={s.tumb}>\r\n        <img\r\n          className={s.picture}\r\n          src={poster}\r\n          alt={title}\r\n          width=\"100\"\r\n          height=\"auto\"\r\n        />\r\n      </div>\r\n      <h2> {title}</h2>\r\n    </div>\r\n  );\r\n};\r\nexport default MoviePreview;\r\n","import React from \"react\";\r\n// import PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MoviePreview from \"../MoviePreview/MoviePreview\";\r\nconst MovieList = ({ movie }) => {\r\n  return (\r\n    <ul>\r\n      {movie.map(({ backdrop_path, id, title }) => (\r\n        <li key={id}>\r\n          <Link\r\n            to={{\r\n              pathname: `/movies/${id}`,\r\n            }}\r\n          >\r\n            <MoviePreview title={title} backdrop_path={backdrop_path} />\r\n          </Link>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\nexport default MovieList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n//import s from \"../Button/Button.module\";\r\nconst Button = ({ onClick }) => {\r\n  return (\r\n    <button type=\"button\" onClick={() => onClick()}>\r\n      Load more\r\n    </button>\r\n  );\r\n};\r\nexport default Button;\r\n","import React, { Component } from \"react\";\r\n\r\nimport Button from \"../../components/Button/Button\";\r\nimport MovieList from \"../../components/MovieList/MovieList\";\r\n//import getDetails from \"../../services/fetchSearch\";\r\n//import queryString from \"query-string\";\r\nimport axios from \"axios\";\r\nclass MoviesPage extends Component {\r\n  state = {\r\n    movies: [],\r\n    query: \"\",\r\n    page: 1,\r\n    total: null,\r\n    error: \"\",\r\n  };\r\n  componentDidMount() {\r\n    if (this.props.location.search) {\r\n      this.onSubmitSearch(this.props.location.search.slice(7));\r\n    }\r\n  }\r\n  onSubmitSearch = (query) => {\r\n    const baseUrl = \"https://api.themoviedb.org/3/\";\r\n    const apiKey = \"da01c4e54a8d5b285bda18b1e0590cea\";\r\n    const path = `${baseUrl}search/movie?api_key=${apiKey}&language=en-US&query=${query}&page=1&include_adult=false`;\r\n    return axios\r\n      .get(path)\r\n      .then((response) => {\r\n        this.setState({ movies: response.data.results });\r\n      })\r\n      .catch((error) => {\r\n        throw new Error(error);\r\n      })\r\n      .finally(() => {\r\n        if (this.state.movies.length >= 1) {\r\n          this.setState({ error: false });\r\n        } else {\r\n          this.setState({ error: true });\r\n        }\r\n      });\r\n  };\r\n  render() {\r\n    const { movies, total, page } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <form onSubmit={this.submitQuery}>\r\n          <label>\r\n            <input type=\"text\" name=\"query\" />\r\n          </label>\r\n          <button type=\"submit\">Search</button>\r\n        </form>\r\n        {movies.length > 0 ? (\r\n          <>\r\n            <MovieList movie={movies} />\r\n            {page <= total && <Button onClick={this.handleBtn} />}\r\n          </>\r\n        ) : (\r\n          <h2>Введите запрос</h2>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default MoviesPage;\r\n"],"sourceRoot":""}